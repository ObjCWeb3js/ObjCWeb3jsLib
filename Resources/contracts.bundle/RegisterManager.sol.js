var Web3 = require("web3");
var SolidityEvent = require("web3/lib/web3/event.js");

(function() {
  // Planned for future features, logging, etc.
  function Provider(provider) {
    this.provider = provider;
  }

  Provider.prototype.send = function() {
    this.provider.send.apply(this.provider, arguments);
  };

  Provider.prototype.sendAsync = function() {
    this.provider.sendAsync.apply(this.provider, arguments);
  };

  var BigNumber = (new Web3()).toBigNumber(0).constructor;

  var Utils = {
    is_object: function(val) {
      return typeof val == "object" && !Array.isArray(val);
    },
    is_big_number: function(val) {
      if (typeof val != "object") return false;

      // Instanceof won't work because we have multiple versions of Web3.
      try {
        new BigNumber(val);
        return true;
      } catch (e) {
        return false;
      }
    },
    merge: function() {
      var merged = {};
      var args = Array.prototype.slice.call(arguments);

      for (var i = 0; i < args.length; i++) {
        var object = args[i];
        var keys = Object.keys(object);
        for (var j = 0; j < keys.length; j++) {
          var key = keys[j];
          var value = object[key];
          merged[key] = value;
        }
      }

      return merged;
    },
    promisifyFunction: function(fn, C) {
      var self = this;
      return function() {
        var instance = this;

        var args = Array.prototype.slice.call(arguments);
        var tx_params = {};
        var last_arg = args[args.length - 1];

        // It's only tx_params if it's an object and not a BigNumber.
        if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {
          tx_params = args.pop();
        }

        tx_params = Utils.merge(C.class_defaults, tx_params);

        return new Promise(function(accept, reject) {
          var callback = function(error, result) {
            if (error != null) {
              reject(error);
            } else {
              accept(result);
            }
          };
          args.push(tx_params, callback);
          fn.apply(instance.contract, args);
        });
      };
    },
    synchronizeFunction: function(fn, instance, C) {
      var self = this;
      return function() {
        var args = Array.prototype.slice.call(arguments);
        var tx_params = {};
        var last_arg = args[args.length - 1];

        // It's only tx_params if it's an object and not a BigNumber.
        if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {
          tx_params = args.pop();
        }

        tx_params = Utils.merge(C.class_defaults, tx_params);

        return new Promise(function(accept, reject) {

          var decodeLogs = function(logs) {
            return logs.map(function(log) {
              var logABI = C.events[log.topics[0]];

              if (logABI == null) {
                return null;
              }

              var decoder = new SolidityEvent(null, logABI, instance.address);
              return decoder.decode(log);
            }).filter(function(log) {
              return log != null;
            });
          };

          var callback = function(error, tx) {
            if (error != null) {
              reject(error);
              return;
            }

            var timeout = C.synchronization_timeout || 240000;
            var start = new Date().getTime();

            var make_attempt = function() {
              C.web3.eth.getTransactionReceipt(tx, function(err, receipt) {
                if (err) return reject(err);

                if (receipt != null) {
                  // If they've opted into next gen, return more information.
                  if (C.next_gen == true) {
                    return accept({
                      tx: tx,
                      receipt: receipt,
                      logs: decodeLogs(receipt.logs)
                    });
                  } else {
                    return accept(tx);
                  }
                }

                if (timeout > 0 && new Date().getTime() - start > timeout) {
                  return reject(new Error("Transaction " + tx + " wasn't processed in " + (timeout / 1000) + " seconds!"));
                }

                setTimeout(make_attempt, 1000);
              });
            };

            make_attempt();
          };

          args.push(tx_params, callback);
          fn.apply(self, args);
        });
      };
    }
  };

  function instantiate(instance, contract) {
    instance.contract = contract;
    var constructor = instance.constructor;

    // Provision our functions.
    for (var i = 0; i < instance.abi.length; i++) {
      var item = instance.abi[i];
      if (item.type == "function") {
        if (item.constant == true) {
          instance[item.name] = Utils.promisifyFunction(contract[item.name], constructor);
        } else {
          instance[item.name] = Utils.synchronizeFunction(contract[item.name], instance, constructor);
        }

        instance[item.name].call = Utils.promisifyFunction(contract[item.name].call, constructor);
        instance[item.name].sendTransaction = Utils.promisifyFunction(contract[item.name].sendTransaction, constructor);
        instance[item.name].request = contract[item.name].request;
        instance[item.name].estimateGas = Utils.promisifyFunction(contract[item.name].estimateGas, constructor);
      }

      if (item.type == "event") {
        instance[item.name] = contract[item.name];
      }
    }

    instance.allEvents = contract.allEvents;
    instance.address = contract.address;
    instance.transactionHash = contract.transactionHash;
  };

  // Use inheritance to create a clone of this contract,
  // and copy over contract's static functions.
  function mutate(fn) {
    var temp = function Clone() { return fn.apply(this, arguments); };

    Object.keys(fn).forEach(function(key) {
      temp[key] = fn[key];
    });

    temp.prototype = Object.create(fn.prototype);
    bootstrap(temp);
    return temp;
  };

  function bootstrap(fn) {
    fn.web3 = new Web3();
    fn.class_defaults  = fn.prototype.defaults || {};

    // Set the network iniitally to make default data available and re-use code.
    // Then remove the saved network id so the network will be auto-detected on first use.
    fn.setNetwork("default");
    fn.network_id = null;
    return fn;
  };

  // Accepts a contract object created with web3.eth.contract.
  // Optionally, if called without `new`, accepts a network_id and will
  // create a new version of the contract abstraction with that network_id set.
  function Contract() {
    if (this instanceof Contract) {
      instantiate(this, arguments[0]);
    } else {
      var C = mutate(Contract);
      var network_id = arguments.length > 0 ? arguments[0] : "default";
      C.setNetwork(network_id);
      return C;
    }
  };

  Contract.currentProvider = null;

  Contract.setProvider = function(provider) {
    var wrapped = new Provider(provider);
    this.web3.setProvider(wrapped);
    this.currentProvider = provider;
  };

  Contract.new = function() {
    if (this.currentProvider == null) {
      throw new Error("RegisterManager error: Please call setProvider() first before calling new().");
    }

    var args = Array.prototype.slice.call(arguments);

    if (!this.unlinked_binary) {
      throw new Error("RegisterManager error: contract binary not set. Can't deploy new instance.");
    }

    var regex = /__[^_]+_+/g;
    var unlinked_libraries = this.binary.match(regex);

    if (unlinked_libraries != null) {
      unlinked_libraries = unlinked_libraries.map(function(name) {
        // Remove underscores
        return name.replace(/_/g, "");
      }).sort().filter(function(name, index, arr) {
        // Remove duplicates
        if (index + 1 >= arr.length) {
          return true;
        }

        return name != arr[index + 1];
      }).join(", ");

      throw new Error("RegisterManager contains unresolved libraries. You must deploy and link the following libraries before you can deploy a new version of RegisterManager: " + unlinked_libraries);
    }

    var self = this;

    return new Promise(function(accept, reject) {
      var contract_class = self.web3.eth.contract(self.abi);
      var tx_params = {};
      var last_arg = args[args.length - 1];

      // It's only tx_params if it's an object and not a BigNumber.
      if (Utils.is_object(last_arg) && !Utils.is_big_number(last_arg)) {
        tx_params = args.pop();
      }

      tx_params = Utils.merge(self.class_defaults, tx_params);

      if (tx_params.data == null) {
        tx_params.data = self.binary;
      }

      // web3 0.9.0 and above calls new twice this callback twice.
      // Why, I have no idea...
      var intermediary = function(err, web3_instance) {
        if (err != null) {
          reject(err);
          return;
        }

        if (err == null && web3_instance != null && web3_instance.address != null) {
          accept(new self(web3_instance));
        }
      };

      args.push(tx_params, intermediary);
      contract_class.new.apply(contract_class, args);
    });
  };

  Contract.at = function(address) {
    if (address == null || typeof address != "string" || address.length != 42) {
      throw new Error("Invalid address passed to RegisterManager.at(): " + address);
    }

    var contract_class = this.web3.eth.contract(this.abi);
    var contract = contract_class.at(address);

    return new this(contract);
  };

  Contract.deployed = function() {
    if (!this.address) {
      throw new Error("Cannot find deployed address: RegisterManager not deployed or address not set.");
    }

    return this.at(this.address);
  };

  Contract.defaults = function(class_defaults) {
    if (this.class_defaults == null) {
      this.class_defaults = {};
    }

    if (class_defaults == null) {
      class_defaults = {};
    }

    var self = this;
    Object.keys(class_defaults).forEach(function(key) {
      var value = class_defaults[key];
      self.class_defaults[key] = value;
    });

    return this.class_defaults;
  };

  Contract.extend = function() {
    var args = Array.prototype.slice.call(arguments);

    for (var i = 0; i < arguments.length; i++) {
      var object = arguments[i];
      var keys = Object.keys(object);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var value = object[key];
        this.prototype[key] = value;
      }
    }
  };

  Contract.all_networks = {
  "default": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          },
          {
            "name": "_contractName",
            "type": "string"
          },
          {
            "name": "_contractVersion",
            "type": "string"
          }
        ],
        "name": "register",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_addr",
            "type": "address"
          }
        ],
        "name": "findModuleNameByAddress",
        "outputs": [
          {
            "name": "_moduleName",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_contractAddr",
            "type": "address"
          }
        ],
        "name": "IfContractRegist",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "unRegister",
        "outputs": [],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          }
        ],
        "name": "IfModuleRegist",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          }
        ],
        "name": "getModuleAddress",
        "outputs": [
          {
            "name": "_address",
            "type": "address"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_fromModuleNameAndVersion",
            "type": "string"
          },
          {
            "name": "_fromNameAndVersion",
            "type": "string"
          },
          {
            "name": "_toModuleNameAndVersion",
            "type": "string"
          },
          {
            "name": "_toNameAndVersion",
            "type": "string"
          },
          {
            "name": "_signString",
            "type": "string"
          }
        ],
        "name": "transferContract",
        "outputs": [
          {
            "name": "_errno",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          },
          {
            "name": "_contractName",
            "type": "string"
          },
          {
            "name": "_contractVersion",
            "type": "string"
          }
        ],
        "name": "IfContractRegist",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          },
          {
            "name": "_newOwner",
            "type": "address"
          }
        ],
        "name": "changeModuleRegisterOwner",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          }
        ],
        "name": "register",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_addr",
            "type": "address"
          }
        ],
        "name": "findContractVersionByAddress",
        "outputs": [
          {
            "name": "_contractVersion",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_addr",
            "type": "address"
          }
        ],
        "name": "findResNameByAddress",
        "outputs": [
          {
            "name": "_contractName",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          },
          {
            "name": "_contractName",
            "type": "string"
          },
          {
            "name": "_contractVersion",
            "type": "string"
          },
          {
            "name": "_newOwner",
            "type": "address"
          }
        ],
        "name": "changeContractRegisterOwner",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_moduleName",
            "type": "string"
          },
          {
            "name": "_moduleVersion",
            "type": "string"
          },
          {
            "name": "_contractName",
            "type": "string"
          },
          {
            "name": "_contractVersion",
            "type": "string"
          }
        ],
        "name": "getContractAddress",
        "outputs": [
          {
            "name": "_address",
            "type": "address"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_addr",
            "type": "address"
          }
        ],
        "name": "findModuleVersionByAddress",
        "outputs": [
          {
            "name": "_moduleVersion",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_pageNum",
            "type": "uint256"
          },
          {
            "name": "_pageSize",
            "type": "uint256"
          }
        ],
        "name": "getRegisteredContract",
        "outputs": [
          {
            "name": "_json",
            "type": "string"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_moduleAddr",
            "type": "address"
          }
        ],
        "name": "IfModuleRegist",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "inputs": [],
        "payable": false,
        "type": "constructor"
      }
    ],
    "unlinked_binary": "0x606060405234610000575b60048054600160a060020a0319166c01000000000000000000000000338102041790555b5b616afe806200003e6000396000f3606060405236156100cf5760e060020a60003504630e24c52c81146100d4578063222594c5146101f057806323d80d3a1461021257806326d7b3b4146102365780632921e6fc146102455780632c2689b5146102e9578063337cc706146103955780633bd7a51a146104ee5780633e1092f21461060c5780633ffbd47f146106b057806350391932146107525780635c2cc46d1461077457806387319e1e1461079657806395a039ba146108b45780639b8b6037146109da578063a01b0c27146109fc578063d0d3b9df14610a7d575b610000565b34610000576101de600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b01803591820183900483028401830190945280835297999881019791965091820194509250829150840183828082843750949650610aa195505050505050565b60408051918252519081900360200190f35b34610000576101de6004356113df565b60408051918252519081900360200190f35b34610000576102226004356118c0565b604080519115158252519081900360200190f35b3461000057610243611be2565b005b3461000057610222600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375094965061242795505050505050565b604080519115158252519081900360200190f35b3461000057610379600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375094965061259695505050505050565b60408051600160a060020a039092168252519081900360200190f35b34610000576101de600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375094965061260b95505050505050565b60408051918252519081900360200190f35b3461000057610222600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375094965061284b95505050505050565b604080519115158252519081900360200190f35b34610000576101de600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b018035918201839004830284018301909452808352979998810197919650918201945092508291508401838280828437509496505093359350612b3092505050565b60408051918252519081900360200190f35b34610000576101de600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b01803591820183900483028401830190945280835297999881019791965091820194509250829150840183828082843750949650612e7795505050505050565b60408051918252519081900360200190f35b34610000576101de6004356135a6565b60408051918252519081900360200190f35b34610000576101de600435613a31565b60408051918252519081900360200190f35b34610000576101de600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979998810197919650918201945092508291508401838280828437509496505093359350613eb892505050565b60408051918252519081900360200190f35b3461000057610379600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375050604080516020601f89358b0180359182018390048302840183019094528083529799988101979196509182019450925082915084018382808284375094965061445795505050505050565b60408051600160a060020a039092168252519081900360200190f35b34610000576101de6004356144d0565b60408051918252519081900360200190f35b3461000057610a0f6004356024356149c6565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610a6f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610000576102226004356154da565b604080519115158252519081900360200190f35b6000600060206040519081016040528060008152602001506000610b24606060405190810160405280602b81526020017f72656769737465722d3e6d73672e73656e646572286e657720636f6e7472616381526020017f742061646472657373293a000000000000000000000000000000000000000000815260200150336156df565b5060408051808201909152601b81527f72656769737465722d3e6f776e6572286f6c64206f776e6572293a00000000006020820152600454610b6f9190600160a060020a03166156df565b5060408051808201909152601481527f72656769737465722d3e74782e6f726967696e3a0000000000000000000000006020820152610bae90326156df565b50339250610bc2888763ffffffff61579216565b15610c3a57610c2f606060405190810160405280602e81526020017f7265676973746572206661696c2c206d6f64756c654e616d6520657175616c7381526020017f20636f6e74726163744e616d652e000000000000000000000000000000000000815260200150615827565b5060001993506113d4565b610c4c8888888863ffffffff6158a616565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a03169190911480159150610d1c575032600160a060020a031660006000600185604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a03908116855292840194909452509101600020600501541614155b15610faa57610de0606060405190810160405280602281526020017f6f6c6420636f6e747261637420616464726573732c206b65794d61705b6b657981526020017f5d3a000000000000000000000000000000000000000000000000000000000000815260200150610ddb600185604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316905063ffffffff61596f16565b615aa1565b506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091149050610f4957610f47608060405190810160405280604181526020017f74782e6f726967696e20213d2072656769737465724d61705b6b65794d61705b81526020017f6b65795d5d2e6f726967696e286f6c6420636f6e7472616374206f726967696e81526020017f2900000000000000000000000000000000000000000000000000000000000000815260200150610ed832600160a060020a031661596f565b610f4260006000600188604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a03908116855292840194909452509101600020600501541661596f565b615b3b565b505b610c2f606060405190810160405280602781526020017f7265676973746572206661696c2c2074782e6f726967696e206e6f7420707562815260200160c960020a663634b9b432b9170281526020015083615aa1565b5060001993506113d4565b6000600084600160a060020a03168152602001908152602001600020905087816000019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061101657805160ff1916838001178555611043565b82800160010185558215611043579182015b82811115611043578251825591602001919060010190611028565b5b506110649291505b80821115611060576000815560010161104c565b5090565b505086816001019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106110b457805160ff19168380011785556110e1565b828001600101855582156110e1579182015b828111156110e15782518255916020019190600101906110c6565b5b506111029291505b80821115611060576000815560010161104c565b5090565b505085816002019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061115257805160ff191683800117855561117f565b8280016001018555821561117f579182015b8281111561117f578251825591602001919060010190611164565b5b506111a09291505b80821115611060576000815560010161104c565b5090565b505084816003019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111f057805160ff191683800117855561121d565b8280016001018555821561121d579182015b8281111561121d578251825591602001919060010190611202565b5b5061123e9291505b80821115611060576000815560010161104c565b5090565b505060048181018054600160a060020a0319908116606060020a87810281900491909117909255600584018054909116328302929092049190911774ff000000000000000000000000000000000000000019169055426103e8026006830155604051835185926001928692909182916020808601928291859183918691600091601f850104600302600f01f150905001915050908152602001604051809103902060006101000a815481600160a060020a030219169083606060020a90810204021790555060028054806001018281815481835581811511611345576000838152602090206113459181019083015b80821115611060576000815560010161104c565b5090565b5b505050916000526020600020900160005b8154606060020a808802046101009290920a918202600160a060020a0390920219161790555060408051606081018252602581527f4952656769737465724d616e61676572202d3e20726567697374657220737563602082015260d960020a6431b2b9b99702918101919091526113ce9083615aa1565b50600093505b505050949350505050565b60408051602081810183526000808352600160a060020a038086168252918190529283206004810154909291161515611417576118b8565b600582015460a060020a900460ff161561156b57611564826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c65780601f1061149b576101008083540402835291602001916114c6565b820191906000526020600020905b8154815290600101906020018083116114a957829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152945088935091508301828280156115515780601f1061152657610100808354040283529160200191611551565b820191906000526020600020905b81548152906001019060200180831161153457829003601f168201915b5050505050615c0390919063ffffffff16565b90506117c5565b6117c2826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116065780601f106115db57610100808354040283529160200191611606565b820191906000526020600020905b8154815290600101906020018083116115e957829003601f168201915b50505060028087018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529450909250908301828280156116955780601f1061166a57610100808354040283529160200191611695565b820191906000526020600020905b81548152906001019060200180831161167857829003601f168201915b5050505060038601805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529350908301828280156117225780601f106116f757610100808354040283529160200191611722565b820191906000526020600020905b81548152906001019060200180831161170557829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294508a935091508301828280156117ad5780601f10611782576101008083540402835291602001916117ad565b820191906000526020600020905b81548152906001019060200180831161179057829003601f168201915b50505050506158a6909392919063ffffffff16565b90505b83600160a060020a0316600182604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091141590506118b857815460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181526118b592909185918301828280156118ab5780601f10611880576101008083540402835291602001916118ab565b820191906000526020600020905b81548152906001019060200180831161188e57829003601f168201915b5050505050615c79565b92505b5b5050919050565b60408051602081810183526000808352600160a060020a0380861682529181905292832060048101549092911615156118fc57600092506118b8565b600582015460a060020a900460ff161561191957600092506118b8565b611b70826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116065780601f106115db57610100808354040283529160200191611606565b820191906000526020600020905b8154815290600101906020018083116115e957829003601f168201915b50505060028087018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529450909250908301828280156116955780601f1061166a57610100808354040283529160200191611695565b820191906000526020600020905b81548152906001019060200180831161167857829003601f168201915b5050505060038601805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529350908301828280156117225780601f106116f757610100808354040283529160200191611722565b820191906000526020600020905b81548152906001019060200180831161170557829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294508a935091508301828280156117ad5780601f10611782576101008083540402835291602001916117ad565b820191906000526020600020905b81548152906001019060200180831161179057829003601f168201915b50505050506158a6909392919063ffffffff16565b905083600160a060020a0316600182604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091149050611bd657600092506118b8565b600192505b5050919050565b6040805160208082018352600080835233600160a060020a0381168252918190529283206005810154919390929160a060020a900460ff1615611d5f57611d58836001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cba5780601f10611c8f57610100808354040283529160200191611cba565b820191906000526020600020905b815481529060010190602001808311611c9d57829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152945089935091508301828280156115515780601f1061152657610100808354040283529160200191611551565b820191906000526020600020905b81548152906001019060200180831161153457829003601f168201915b5050505050615c0390919063ffffffff16565b9150611fb9565b611fb6836001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dfa5780601f10611dcf57610100808354040283529160200191611dfa565b820191906000526020600020905b815481529060010190602001808311611ddd57829003601f168201915b50505060028088018054604080516020601f6000196101006001871615020190941695909504928301859004850281018501909152818152945090925090830182828015611e895780601f10611e5e57610100808354040283529160200191611e89565b820191906000526020600020905b815481529060010190602001808311611e6c57829003601f168201915b5050505060038701805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152935090830182828015611f165780601f10611eeb57610100808354040283529160200191611f16565b820191906000526020600020905b815481529060010190602001808311611ef957829003601f168201915b5050895460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294508b935091508301828280156117ad5780601f10611782576101008083540402835291602001916117ad565b820191906000526020600020905b81548152906001019060200180831161179057829003601f168201915b50505050506158a6909392919063ffffffff16565b91505b6000600085600160a060020a03168152602001908152602001600020600060008201805460018160011615610100020316600290046000825580601f106120005750612032565b601f01602090049060005260206000209081019061203291905b80821115611060576000815560010161104c565b5090565b5b5060018201805460018160011615610100020316600290046000825580601f1061205d575061208f565b601f01602090049060005260206000209081019061208f91905b80821115611060576000815560010161104c565b5090565b5b5060028201805460018160011615610100020316600290046000825580601f106120ba57506120ec565b601f0160209004906000526020600020908101906120ec91905b80821115611060576000815560010161104c565b5090565b5b5060038201805460018160011615610100020316600290046000825580601f106121175750612149565b601f01602090049060005260206000209081019061214991905b80821115611060576000815560010161104c565b5090565b5b505060048181018054600160a060020a031916905560058201805474ffffffffffffffffffffffffffffffffffffffffff19169055600060069092018290556040518451600193869383926020808701939192839286928492879291601f850104600302600f01f150919091019384525050604051918290036020019091208054600160a060020a031916905550600090505b6002548110156122ca5783600160a060020a0316600282815481101561000057906000526020600020900160005b9054600160a060020a036101009290920a900416146122c15760038054806001018281815481835581811511612266576000838152602090206122669181019083015b80821115611060576000815560010161104c565b5090565b5b505050916000526020600020900160005b600284815481101561000057906000526020600020900160005b90548354606060020a600160a060020a0361010094850a90930483168102049390920a92830292021916179055505b5b6001016121dd565b60028054600080835591909152612319907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101905b80821115611060576000815560010161104c565b5090565b5b50600090505b6003548110156123cf576002805480600101828181548183558181151161236c5760008381526020902061236c9181019083015b80821115611060576000815560010161104c565b5090565b5b505050916000526020600020900160005b600384815481101561000057906000526020600020900160005b90548354606060020a600160a060020a0361010094850a90930483168102049390920a92830292021916179055505b600101612320565b6003805460008083559190915261241e907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b908101905b80821115611060576000815560010161104c565b5090565b5b505b50505050565b604080516020810190915260008082529081612449858563ffffffff615c0316565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091141590506124df576040805180820190915260178152600080516020616a9e83398151915260208201526124d5908686615b3b565b506000925061258e565b60006000600184604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a031684529183019390935201600020600581015490925060a060020a900460ff1615159050612589576040805180820190915260158152600080516020616abe83398151915260208201526124d5908686615b3b565b506000925061258e565b600192505b505092915050565b60408051602081019091526000808252906125b7848463ffffffff615c0316565b9050600181604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a03169250505b5092915050565b6040805160208181018352600080835283518083018552818152845180840186528281528551938401909552818352909390918461264f8b8b63ffffffff615c0316565b9450612661898963ffffffff615c0316565b93506126cd60006000600188604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a039081168552928401949094525091016000206004015416615cdd565b925061273960006000600187604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a039081168552928401949094525091016000206004015416615cdd565b9150600095506127498585615df8565b151561275a5762017427955061283c565b6127a58761276e858563ffffffff615c0316565b604051808280519060200190808383829060006004602084601f0104600302600f01f1509050019150506040518091039020615ef6565b905080600160a060020a031660006000600188604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a039081168552928401949094525091016000206005015416146128235762017428955061283c565b61282d838361606b565b9550851561283c576201742995505b5b505050505095945050505050565b60408051602081019091526000808252908161286d878763ffffffff615c0316565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a031691909114159050612903576040805180820190915260178152600080516020616a9e83398151915260208201526128f9908888615b3b565b5060009250612b26565b60006000600184604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a031684529183019390935201600020600581015490925060a060020a900460ff16151590506129ad576040805180820190915260158152600080516020616abe83398151915260208201526128f9908888615b3b565b5060009250612b26565b6129be82868663ffffffff61614416565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a031691909114159050612a665760408051808201909152601981527f636f6e74726163743a20697320756e726567697374657265640000000000000060208201526128f9908686615b3b565b5060009250612b26565b60006000600184604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a031684529183019390935201600020600581015490925060a060020a900460ff16159050612b215760408051808201909152601981527f636f6e74726163743a206973206e6f7420636f6e74726163740000000000000060208201526128f9908686615b3b565b5060009250612b26565b600192505b5050949350505050565b604080516020818101835260008083528351808501909452601c84527f696e206368616e67654d6f64756c6552656769737465724f776e65720000000091840191909152918290612b82908787615b3b565b50612bec606060405190810160405280602681526020017f696e206368616e67654d6f64756c6552656769737465724f776e6572206e657781526020017f4f776e65723a0000000000000000000000000000000000000000000000000000815260200150856156df565b5085511515612c3d5760408051808201909152601481527f6d6f64756c654e616d65206973206e756c6c2e2e0000000000000000000000006020820152612c3290615827565b506000199250612e6e565b84511515612c8d5760408051808201909152601781527f6d6f64756c6556657273696f6e206973206e756c6c2e2e0000000000000000006020820152612c3290615827565b506000199250612e6e565b612c9d868663ffffffff615c0316565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a031691909114159050612d34576040805180820190915260178152600080516020616a9e8339815191526020820152612c32908787615b3b565b506000199250612e6e565b60006000600184604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a031684529183019390935201600020600581015490925060a060020a900460ff1615159050612ddf576040805180820190915260158152600080516020616abe8339815191526020820152612c32908787615b3b565b506000199250612e6e565b60408051808201909152601d81527f6368616e6765206d6f64756c65206f776e65722066726f6d2d3e746f3a00000060208201526005820154612e4c9190612e3590600160a060020a031663ffffffff61596f16565b610f4287600160a060020a031661596f565b615b3b565b50600581018054600160a060020a031916606060020a86810204179055600092505b50509392505050565b6000600060206040519081016040528060008152602001506000612efa606060405190810160405280602981526020017f72656769737465722d3e6d73672e73656e646572286e6577206d6f64756c652081526020017f61646472657373293a0000000000000000000000000000000000000000000000815260200150336156df565b5060408051808201909152601b81527f72656769737465722d3e6f776e6572286f6c64206f776e6572293a00000000006020820152600454612f459190600160a060020a03166156df565b5060408051808201909152601481527f72656769737465722d3e74782e6f726967696e3a0000000000000000000000006020820152612f8490326156df565b50339250612f98868663ffffffff615c0316565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a03169190911480159150613068575032600160a060020a031660006000600185604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a03908116855292840194909452509101600020600501541614155b156132aa57613106604060405190810160405280602081526020017f6f6c64206d6f64756c6520616464726573732c206b65794d61705b6b65795d3a815260200150610ddb600185604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316905063ffffffff61596f16565b615aa1565b506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a031691909114905061324957613247606060405190810160405280603f81526020017f74782e6f726967696e20213d2072656769737465724d61705b6b65794d61705b81526020017f6b65795d5d2e6f726967696e286f6c64206d6f64756c65206f726967696e2900815260200150610ed832600160a060020a031661596f565b610f4260006000600188604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a03908116855292840194909452509101600020600501541661596f565b615b3b565b505b61329f606060405190810160405280602781526020017f7265676973746572206661696c2c2074782e6f726967696e206e6f7420707562815260200160c960020a663634b9b432b9170281526020015083615aa1565b50600019935061359d565b6000600084600160a060020a03168152602001908152602001600020905085816000019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061331657805160ff1916838001178555613343565b82800160010185558215613343579182015b82811115613343578251825591602001919060010190613328565b5b506133649291505b80821115611060576000815560010161104c565b5090565b505084816001019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106133b457805160ff19168380011785556133e1565b828001600101855582156133e1579182015b828111156133e15782518255916020019190600101906133c6565b5b506134029291505b80821115611060576000815560010161104c565b5090565b505060048181018054600160a060020a0319908116606060020a8781028190049190911790925560058401805460a060020a9216328402939093049290921774ff00000000000000000000000000000000000000001916179055426103e8026006830155604051835185926001928692909182916020808601928291859183918691600091601f850104600302600f01f150905001915050908152602001604051809103902060006101000a815481600160a060020a030219169083606060020a9081020402179055506002805480600101828181548183558181151161350e5760008381526020902061350e9181019083015b80821115611060576000815560010161104c565b5090565b5b505050916000526020600020900160005b8154606060020a808802046101009290920a918202600160a060020a0390920219161790555060408051606081018252602581527f4952656769737465724d616e61676572202d3e20726567697374657220737563602082015260d960020a6431b2b9b99702918101919091526135979083615aa1565b50600093505b50505092915050565b60408051602081810183526000808352600160a060020a0380861682529181905292832060048101549092911615156135de576118b8565b600582015460a060020a900460ff16156136d45760408051606081018252602881527f616464726573732062656c6f6e677320746f206d6f64756c653a2c206e6f742060208083019190915260c260020a6718dbdb9d1c9858dd028284015284548351601f600260001961010060018616150201909316929092049182018390048302810183019094528084526136ce93918691908301828280156136c45780601f10613699576101008083540402835291602001916136c4565b820191906000526020600020905b8154815290600101906020018083116136a757829003601f168201915b5050505050615aa1565b506118b8565b61392b826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116065780601f106115db57610100808354040283529160200191611606565b820191906000526020600020905b8154815290600101906020018083116115e957829003601f168201915b50505060028087018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529450909250908301828280156116955780601f1061166a57610100808354040283529160200191611695565b820191906000526020600020905b81548152906001019060200180831161167857829003601f168201915b5050505060038601805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529350908301828280156117225780601f106116f757610100808354040283529160200191611722565b820191906000526020600020905b81548152906001019060200180831161170557829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294508a935091508301828280156117ad5780601f10611782576101008083540402835291602001916117ad565b820191906000526020600020905b81548152906001019060200180831161179057829003601f168201915b50505050506158a6909392919063ffffffff16565b905083600160a060020a0316600182604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091141590506118b857600382018054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526118b593909290918301828280156118ab5780601f10611880576101008083540402835291602001916118ab565b820191906000526020600020905b81548152906001019060200180831161188e57829003601f168201915b5050505050615c79565b92506118b8565b5b5050919050565b60408051602081810183526000808352600160a060020a038086168252918190529283206004810154909291161515613a69576118b8565b600582015460a060020a900460ff1615613b5f5760408051606081018252602881527f616464726573732062656c6f6e677320746f206d6f64756c653a2c206e6f742060208083019190915260c260020a6718dbdb9d1c9858dd028284015284548351601f600260001961010060018616150201909316929092049182018390048302810183019094528084526136ce93918691908301828280156136c45780601f10613699576101008083540402835291602001916136c4565b820191906000526020600020905b8154815290600101906020018083116136a757829003601f168201915b5050505050615aa1565b506118b8565b613db6826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116065780601f106115db57610100808354040283529160200191611606565b820191906000526020600020905b8154815290600101906020018083116115e957829003601f168201915b50505060028087018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529450909250908301828280156116955780601f1061166a57610100808354040283529160200191611695565b820191906000526020600020905b81548152906001019060200180831161167857829003601f168201915b5050505060038601805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529350908301828280156117225780601f106116f757610100808354040283529160200191611722565b820191906000526020600020905b81548152906001019060200180831161170557829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294508a935091508301828280156117ad5780601f10611782576101008083540402835291602001916117ad565b820191906000526020600020905b81548152906001019060200180831161179057829003601f168201915b50505050506158a6909392919063ffffffff16565b905083600160a060020a0316600182604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091141590506118b857600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084526118b59392918301828280156118ab5780601f10611880576101008083540402835291602001916118ab565b820191906000526020600020905b81548152906001019060200180831161188e57829003601f168201915b5050505050615c79565b92506118b8565b5b5050919050565b604080516020818101835260008083528351808501909452601e84527f696e206368616e6765436f6e747261637452656769737465724f776e6572000091840191909152918290613f0a908989615b3b565b5060408051808201909152601e81527f696e206368616e6765436f6e747261637452656769737465724f776e657200006020820152613f4a908787615b3b565b50613fb4606060405190810160405280602881526020017f696e206368616e6765436f6e747261637452656769737465724f776e6572206e81526020017f65774f776e65723a000000000000000000000000000000000000000000000000815260200150856156df565b50875115156140055760408051808201909152601481527f6d6f64756c654e616d65206973206e756c6c2e2e0000000000000000000000006020820152613ffa90615827565b50600019925061444c565b865115156140555760408051808201909152601781527f6d6f64756c6556657273696f6e206973206e756c6c2e2e0000000000000000006020820152613ffa90615827565b50600019925061444c565b855115156140a55760408051808201909152601681527f636f6e74726163744e616d65206973206e756c6c2e2e000000000000000000006020820152613ffa90615827565b50600019925061444c565b845115156140f55760408051808201909152601981527f636f6e747261637456657273696f6e206973206e756c6c2e2e000000000000006020820152613ffa90615827565b50600019925061444c565b614105888863ffffffff615c0316565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a03169190911415905061419c576040805180820190915260178152600080516020616a9e8339815191526020820152613ffa908989615b3b565b50600019925061444c565b60006000600184604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a031684529183019390935201600020600581015490925060a060020a900460ff1615159050614247576040805180820190915260158152600080516020616abe8339815191526020820152613ffa908989615b3b565b50600019925061444c565b61425882878763ffffffff61614416565b91506000600160a060020a0316600183604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091141590506143015760408051808201909152601981527f636f6e74726163743a20697320756e72656769737465726564000000000000006020820152613ffa908787615b3b565b50600019925061444c565b60006000600184604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a031684529183019390935201600020600581015490925060a060020a900460ff161590506143bd5760408051808201909152601981527f636f6e74726163743a206973206e6f7420636f6e7472616374000000000000006020820152613ffa908787615b3b565b50600019925061444c565b60408051808201909152601f81527f6368616e676520636f6e7472616374206f776e65722066726f6d2d3e746f3a006020820152600582015461442a9190612e3590600160a060020a031663ffffffff61596f16565b610f4287600160a060020a031661596f565b615b3b565b50600581018054600160a060020a031916606060020a86810204179055600092505b505095945050505050565b604080516020810190915260008082529061447a8686868663ffffffff6158a616565b9050600181604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a03169250505b50949350505050565b60408051602081810183526000808352600160a060020a038086168252918190529283206004810154909291161515614508576118b8565b600582015460a060020a900460ff161561465c57614655826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c65780601f1061149b576101008083540402835291602001916114c6565b820191906000526020600020905b8154815290600101906020018083116114a957829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152945088935091508301828280156115515780601f1061152657610100808354040283529160200191611551565b820191906000526020600020905b81548152906001019060200180831161153457829003601f168201915b5050505050615c0390919063ffffffff16565b90506148b6565b6148b3826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116065780601f106115db57610100808354040283529160200191611606565b820191906000526020600020905b8154815290600101906020018083116115e957829003601f168201915b50505060028087018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529450909250908301828280156116955780601f1061166a57610100808354040283529160200191611695565b820191906000526020600020905b81548152906001019060200180831161167857829003601f168201915b5050505060038601805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529350908301828280156117225780601f106116f757610100808354040283529160200191611722565b820191906000526020600020905b81548152906001019060200180831161170557829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294508a935091508301828280156117ad5780601f10611782576101008083540402835291602001916117ad565b820191906000526020600020905b81548152906001019060200180831161179057829003601f168201915b50505050506158a6909392919063ffffffff16565b90505b83600160a060020a0316600182604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091141590506118b8576118b5826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ab5780601f10611880576101008083540402835291602001916118ab565b820191906000526020600020905b81548152906001019060200180831161188e57829003601f168201915b5050505050615c79565b92506118b8565b5b5050919050565b6040805160208181018352600080835283518085019094526001845260f860020a607b0291840191909152909181908190614a0890859063ffffffff615c0316565b60408051808201909152600381527f72657400000000000000000000000000000000000000000000000000000000006020820152909450614a7e90614a559060009063ffffffff6161ec16565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b60408051808201909152600881527f2264617461223a7b0000000000000000000000000000000000000000000000006020820152909450614ac690859063ffffffff615c0316565b60408051808201909152600581527f746f74616c0000000000000000000000000000000000000000000000000000006020820152600254919550614b3c91614a559163ffffffff6161ec16565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b60408051808201909152600981527f226974656d73223a5b00000000000000000000000000000000000000000000006020820152909450614b8490859063ffffffff615c0316565b935050508383029050600184018302815b8181108015614ba5575060025481105b156154895782811115614be157604080518082019091526001815260fa60020a600b026020820152614bde90859063ffffffff615c0316565b93505b604080518082019091526001815260f860020a607b026020820152614c0d90859063ffffffff615c0316565b9350614d69614a55604060405190810160405280600a81526020017f6d6f64756c654e616d650000000000000000000000000000000000000000000081526020015060006000600286815481101561000057906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a031681526020019081526020016000206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614d2d5780601f10614d0257610100808354040283529160200191614d2d565b820191906000526020600020905b815481529060010190602001808311614d1057829003601f168201915b50505050506163e090919063ffffffff16565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b9350614ec5614a55604060405190810160405280600d81526020017f6d6f64756c6556657273696f6e0000000000000000000000000000000000000081526020015060006000600286815481101561000057906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a031681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614d2d5780601f10614d0257610100808354040283529160200191614d2d565b820191906000526020600020905b815481529060010190602001808311614d1057829003601f168201915b50505050506163e090919063ffffffff16565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b9350614f89614a55604060405190810160405280600a81526020017f63726561746554696d650000000000000000000000000000000000000000000081526020015060006000600286815481101561000057906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a03168152602001908152602001600020600601546161ec90919063ffffffff16565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b935060006000600283815481101561000057906000526020600020900160005b90546101009190910a9004600160a060020a0316815260208101919091526040016000206005015460a060020a900460ff16151561528357615124614a55604060405190810160405280600c81526020017f636f6e74726163744e616d65000000000000000000000000000000000000000081526020015060006000600286815481101561000057906000526020600020900160005b905461010091820a9004600160a060020a0316825260208083019390935260409182016000206002908101805484516001821615909402600019011691909104601f81018590048502830185019093528282529092909190830182828015614d2d5780601f10614d0257610100808354040283529160200191614d2d565b820191906000526020600020905b815481529060010190602001808311614d1057829003601f168201915b50505050506163e090919063ffffffff16565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b9350615280614a55604060405190810160405280600f81526020017f636f6e747261637456657273696f6e000000000000000000000000000000000081526020015060006000600286815481101561000057906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a031681526020019081526020016000206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614d2d5780601f10614d0257610100808354040283529160200191614d2d565b820191906000526020600020905b815481529060010190602001808311614d1057829003601f168201915b50505050506163e090919063ffffffff16565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b93505b61534e614a55604060405190810160405280600781526020017f616464726573730000000000000000000000000000000000000000000000000081526020015061531960006000600287815481101561000057906000526020600020900160005b9054600160a060020a036101009290920a9004811682526020820192909252604001600020600401541663ffffffff61596f16565b9063ffffffff6163e016565b604080518082019091526001815260fa60020a600b02602082015286919063ffffffff61614416565b935060006000600283815481101561000057906000526020600020900160005b90546101009190910a9004600160a060020a0316815260208101919091526040016000206005015460a060020a900460ff16156153f15760408051808201909152600f81527f2269734d6f64756c65223a74727565000000000000000000000000000000000060208201526153ea90859063ffffffff615c0316565b9350615439565b60408051808201909152601081527f2269734d6f64756c65223a66616c736500000000000000000000000000000000602082015261543690859063ffffffff615c0316565b93505b60408051808201909152600181527f7d00000000000000000000000000000000000000000000000000000000000000602082015261547e90859063ffffffff615c0316565b93505b600101614b95565b60408051808201909152600381527f5d7d7d000000000000000000000000000000000000000000000000000000000060208201526154ce90859063ffffffff615c0316565b93505b50505092915050565b60408051602081810183526000808352600160a060020a03808616825291819052928320600481015490929116151561551657600092506118b8565b600582015460a060020a900460ff16151561553457600092506118b8565b611b70826001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c65780601f1061149b576101008083540402835291602001916114c6565b820191906000526020600020905b8154815290600101906020018083116114a957829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152945088935091508301828280156115515780601f1061152657610100808354040283529160200191611551565b820191906000526020600020905b81548152906001019060200180831161153457829003601f168201915b5050505050615c0390919063ffffffff16565b905083600160a060020a0316600182604051808280519060200190808383829060006004602084601f0104600302600f01f1509190910193845250506040519182900360200190912054600160a060020a0316919091149050611bd657600092506118b8565b600192505b5050919050565b60408051602081810183526000918290528251606081018452602b8152600080516020616ade8339815191528183015260a860020a6a655d5b3035766d6c6f675d028185015283518085019094526001845260fd60020a918401919091529091829081908190615772908890615763600160a060020a038a1663ffffffff61596f16565b8792919063ffffffff6158a616565b9350835191506020840192508183209050600094505b5050505092915050565b60006000825184511415156157aa5760009150612604565b5060005b835181101561581b57828181518110156100005790602001015160f860020a900460f860020a02600160f860020a031916848281518110156100005760209101015160f860020a9081900402600160f860020a031916146158125760009150612604565b5b6001016157ae565b600191505b5092915050565b60408051602081810183526000918290528251606081018452602b8152600080516020616ade8339815191529181019190915260a860020a6a655d5b3035766d6c6f675d029281019290925290818080615887848763ffffffff615c0316565b9350835191506020840192508183209050600094505b50505050919050565b6020604051908101604052806000815260200150600060006000600060006000875189518b518d510101016040518059106158de5750595b8181526020808302820101604052905b50965060208b01955060208a01945060208901935060208801925060208701915060009050615921818301878d5161655f565b8a5181019050615935818301868c5161655f565b895181019050615949818301858b5161655f565b88518101905061595d818301848a5161655f565b8751015b505050505050949350505050565b602060405190810160405280600081526020015060006000602a6040518059106159965750595b8181526020808302820101604052905b50925060fc60020a600302836000815181101561000057906020010190600160f860020a031916908160001a90535060fb60020a600f02836001815181101561000057906020010190600160f860020a031916908160001a905350602991505b600260ff8316106118b857506010830492600f16600a811015615a58578060300160f860020a02838360ff16815181101561000057906020010190600160f860020a031916908160001a905350615a8c565b600a810360610160f860020a02838360ff16815181101561000057906020010190600160f860020a031916908160001a9053505b5b60001990910190615a06565b5b5050919050565b60408051602081810183526000918290528251606081018452602b8152600080516020616ade8339815191528183015260a860020a6a655d5b3035766d6c6f675d028185015283518085019094526001845260fd60020a91840191909152909182908190819061577290859089908963ffffffff6158a616565b9350835191506020840192508183209050600094505b5050505092915050565b60408051602081810183526000918290528251606081018452602b8152600080516020616ade8339815191528183015260a860020a6a655d5b3035766d6c6f675d028185015283518085019094526001845260fd60020a918401919091529091829081908190615bb59085908a908a63ffffffff6158a616565b604080518082019091526001815260fd60020a6020820152909450615be29085908863ffffffff61614416565b9350835191506020840192508183209050600094505b505050509392505050565b60206040519081016040528060008152602001506000600060008451865101604051805910615c2f5750595b8181526020808302820101604052905b509350602086019250602085019150602084019050615c608184885161655f565b61359d8651820183875161655f565b5b50505092915050565b8051600090816020821115615c8d57602091505b5060009150815b818110156118b857838181518110156100005790602001015160f860020a900460f860020a0260f860020a900460ff1683610100020192505b600101615c94565b5b5050919050565b6020604051908101604052806000815260200150602060405190810160405280600081526020015060006000600060006028604051805910615d1c5750595b8181526020808302820101604052905b509450600093505b6014841015615dea578360130360080260020a87600160a060020a03168115610000570460f860020a9081029350601081850460ff8116829004830294508285049091029003029050615d86826165a8565b8585600202815181101561000057906020010190600160f860020a031916908160001a905350615db5816165a8565b8585600202600101815181101561000057906020010190600160f860020a031916908160001a9053505b600190930192615d34565b8495505b5050505050919050565b60006000600060006000600187604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050908152602001604051809103902060009054906101000a9004600160a060020a0316600160a060020a0316815260200190815260200160002060050160009054906101000a9004600160a060020a0316915060006000600186604051808280519060200190808383829060006004602084601f0104600302600f01f150919091019384525050604080516020938190038401902054600160a060020a039081168552928401949094525091016000206005015481169083168114935090505b505092915050565b604080516020818101835260008083528351918201909352828152828080615f238863ffffffff61661216565b9450606060405190810160405280602881526020017f303030303030303030303030303030303030303030303030303030303030303081526020017f30303030303030300000000000000000000000000000000000000000000000008152602001509350604185511015615fa157615f9a8461677d565b9550616060565b615fb6615fb18660006020616964565b616a09565b9250615fcd615fb18660206020616964565b616a09565b9150615fdc8560406001616964565b600081518110156100005701602090810151604080516000818152818501835290820181905281518b815260ff60f860020a94859004850294850416818601528083018890526060810187905291519294506001936080808401949193601f19830193908390039091019190866161da5a03f1156100005750506020604051035195505b505050505092915050565b6040805160208181018352600091829052825160608101845260368152600080516020616ade833981519152818301527f655d5b31367472616e73666572636f6e74726163745d000000000000000000008185015283518085019094526001845260fa60020a601f029184019190915290918290819081906160f59085908963ffffffff61614416565b604080518082019091526001815260fa60020a601f0260208201529094506161259085908863ffffffff61614416565b93508351915060208401925081832090508094505b5050505092915050565b602060405190810160405280600081526020015060006000600060006000865188518a5101016040518059106161775750595b8181526020808302820101604052905b509550602089019450602088019350602087019250602086019150600090506161b4818301868b5161655f565b8851810190506161c8818301858a5161655f565b8751810190506161dc81830184895161655f565b8651015b50505050509392505050565b60408051602081019091526000808252825160030190808086151561621657600184019350616234565b8692505b600083111561623457600a8360019095019404925061621a565b5b836040518059106162435750595b8181526020808302820101604052905b5080519095506001925060f960020a60110290869060009081101561000057906020010190600160f860020a031916908160001a905350600090505b85518110156162e857858181518110156100005790602001015160f860020a900460f860020a028583806001019450815181101561000057906020010190600160f860020a031916908160001a9053505b60010161628f565b60f960020a6011028583806001019450815181101561000057906020010190600160f860020a031916908160001a90535060f960020a601d028583806001019450815181101561000057906020010190600160f860020a031916908160001a9053506000198401915086151561638857603060f860020a028583815181101561000057906020010190600160f860020a031916908160001a905350615788565b5b600087111561578857600a870660300160f860020a02858380600190039450815181101561000057906020010190600160f860020a031916908160001a905350600a87049650616389565b5b5b5050505092915050565b6020604051908101604052806000815260200150600060006000600085518751016005016040518059106164115750595b8181526020808302820101604052905b508051909550602088810195508781019450860192506001915060f960020a60110290869060009081101561000057906020010190600160f860020a031916908160001a90535061647681830184885161655f565b85518101905060f960020a6011028582806001019350815181101561000057906020010190600160f860020a031916908160001a90535060f960020a601d028582806001019350815181101561000057906020010190600160f860020a031916908160001a90535060f960020a6011028582806001019350815181101561000057906020010190600160f860020a031916908160001a90535061651d81830185895161655f565b86518101905060f960020a6011028582806001019350815181101561000057906020010190600160f860020a031916908160001a9053505b5050505092915050565b60005b602082106165845782518452602093840193909201915b602082039150616562565b6001826020036101000a039050801983511681855116818117865250505b50505050565b60007f0a00000000000000000000000000000000000000000000000000000000000000600160f860020a0319831610156165f8578160f860020a900460300160f860020a02905061660c5661660c565b8160f860020a900460570160f860020a0290505b5b919050565b60408051602081810183526000808352835191820190935282815283519192908180600285066001141561667457604080518082019091526001815260fc60020a600302602082015261666b908863ffffffff615c0316565b96508460010194505b6002850461ffff166040518059106166895750595b8181526020808302820101604052905b509250600093505b848461ffff16101561676f576166d7878561ffff1681518110156100005790602001015160f860020a900460f860020a02616a14565b9150616706878560010161ffff1681518110156100005790602001015160f860020a900460f860020a02616a14565b90508160000b600019148061671f57508060000b600019145b1561672957615dee565b60f860020a6010830282010283600261ffff87160461ffff16815181101561000057906020010190600160f860020a031916908160001a9053505b6002840193506166a1565b8295505b5050505050919050565b60008080805b84518361ffff16101561680357848361ffff1681518110156100005790602001015160f860020a900460f860020a0260f860020a900491508160ff16602014806167d057508160ff166009145b806167de57508160ff16600d145b806167ec57508160ff16600a145b15156167f757616803565b5b826001019250616783565b60028361ffff16865103101561681c576000935061695c565b848361ffff1681518110156100005790602001015160f860020a900460f860020a02600160f860020a03191660fc60020a60030214801561689a5750848360010161ffff1681518110156100005790602001015160f860020a900460f860020a02602060f860020a0217600160f860020a03191660fb60020a600f02145b15156168a9576000935061695c565b600090506002830192505b84518361ffff16101561695857848361ffff16815181101561000057016020015160f860020a908190048102049150603060ff8316108015906168fb575060398260ff1611155b1561690b57603082039150616943565b60618260201760ff1610158015616929575060668260201760ff1611155b1561693a5760561990910190616943565b6000935061695c565b5b60100260ff8216015b8260010192506168b4565b8093505b505050919050565b604080516020818101835260008083528351918201845280825292519192909184908059106169905750595b8181526020808302820101604052905b509150600090505b838110156169fc578585820181518110156100005790602001015160f860020a900460f860020a028282815181101561000057906020010190600160f860020a031916908160001a9053505b6001016169a8565b8192505b50509392505050565b60208101515b919050565b60001960f860020a82046030600082900b12801590616a37575060398160000b13155b15616a4757603081039150616a95565b60418160000b12158015616a5f5750605a8160000b13155b15616a705760361981019150616a95565b60618160000b12158015616a885750607a8160000b13155b15616a9557605619810191505b5b5b5b50919050566d6f64756c653a20697320756e726567697374657265640000000000000000006d6f64756c653a206973206e6f74206d6f64756c6500000000000000000000005b36396439386436613034633431623436303561616362376264326637346265",
    "events": {},
    "updated_at": 1508838165091
  }
};

  Contract.checkNetwork = function(callback) {
    var self = this;

    if (this.network_id != null) {
      return callback();
    }

    this.web3.version.network(function(err, result) {
      if (err) return callback(err);

      var network_id = result.toString();

      // If we have the main network,
      if (network_id == "1") {
        var possible_ids = ["1", "live", "default"];

        for (var i = 0; i < possible_ids.length; i++) {
          var id = possible_ids[i];
          if (Contract.all_networks[id] != null) {
            network_id = id;
            break;
          }
        }
      }

      if (self.all_networks[network_id] == null) {
        return callback(new Error(self.name + " error: Can't find artifacts for network id '" + network_id + "'"));
      }

      self.setNetwork(network_id);
      callback();
    })
  };

  Contract.setNetwork = function(network_id) {
    var network = this.all_networks[network_id] || {};

    this.abi             = this.prototype.abi             = network.abi;
    this.unlinked_binary = this.prototype.unlinked_binary = network.unlinked_binary;
    this.address         = this.prototype.address         = network.address;
    this.updated_at      = this.prototype.updated_at      = network.updated_at;
    this.links           = this.prototype.links           = network.links || {};
    this.events          = this.prototype.events          = network.events || {};

    this.network_id = network_id;
  };

  Contract.networks = function() {
    return Object.keys(this.all_networks);
  };

  Contract.link = function(name, address) {
    if (typeof name == "function") {
      var contract = name;

      if (contract.address == null) {
        throw new Error("Cannot link contract without an address.");
      }

      Contract.link(contract.contract_name, contract.address);

      // Merge events so this contract knows about library's events
      Object.keys(contract.events).forEach(function(topic) {
        Contract.events[topic] = contract.events[topic];
      });

      return;
    }

    if (typeof name == "object") {
      var obj = name;
      Object.keys(obj).forEach(function(name) {
        var a = obj[name];
        Contract.link(name, a);
      });
      return;
    }

    Contract.links[name] = address;
  };

  Contract.contract_name   = Contract.prototype.contract_name   = "RegisterManager";
  Contract.generated_with  = Contract.prototype.generated_with  = "3.2.0";

  // Allow people to opt-in to breaking changes now.
  Contract.next_gen = false;

  var properties = {
    binary: function() {
      var binary = Contract.unlinked_binary;

      Object.keys(Contract.links).forEach(function(library_name) {
        var library_address = Contract.links[library_name];
        var regex = new RegExp("__" + library_name + "_*", "g");

        binary = binary.replace(regex, library_address.replace("0x", ""));
      });

      return binary;
    }
  };

  Object.keys(properties).forEach(function(key) {
    var getter = properties[key];

    var definition = {};
    definition.enumerable = true;
    definition.configurable = false;
    definition.get = getter;

    Object.defineProperty(Contract, key, definition);
    Object.defineProperty(Contract.prototype, key, definition);
  });

  bootstrap(Contract);

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of this contract in the browser,
    // and we can use that.
    window.RegisterManager = Contract;
  }
})();
